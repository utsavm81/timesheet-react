{"ast":null,"code":"var _jsxFileName = \"/Users/macos18/Documents/IPS_Projects/RND/Timsheet_calcy/timecalculator_react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './Style.css';\nimport axios from 'axios';\nimport toastr from 'toastr';\nimport \"./toastr.min.css\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from \"react-loader-spinner\";\nimport moment from 'moment';\nimport TimePicker from 'react-time-picker';\nimport io from \"socket.io-client\";\nimport Modal from 'react-modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ENDPOINT = 'https://time-calculator-node.herokuapp.com/';\nlet socket;\n\nfunction App() {\n  _s();\n\n  const [count, setCount] = useState(0);\n  const [modal, setModal] = useState(false);\n  const [tab, setTab] = useState(localStorage.getItem(\"activeTab\") ? localStorage.getItem(\"activeTab\") : 'timeSheet');\n  const [todo, setTodo] = useState({\n    date: null,\n    task: [],\n    completed: []\n  });\n  useEffect(() => {\n    socket = io(ENDPOINT);\n    socket.emit('join', \"\", () => {});\n  }, []);\n  useEffect(() => {\n    socket.on('countUpdate', data => {\n      setCount(data);\n    });\n  }, []);\n  const [data, setData] = useState(null);\n  const [salert, setalert] = useState(false);\n  const [deleteId, setDeleteId] = useState(null);\n  const [loader, setLoader] = useState(false);\n  const [time, settime] = useState(\"00:00\");\n  const [backTime, setbackTime] = useState(null);\n  const [estimatedTime, setestimatedTime] = useState(null);\n\n  const calculateData = () => {\n    let csvData = document.getElementById(\"fname\").value;\n\n    if (!csvData) {\n      toastr.error(\"input can to be blank!\");\n      return;\n    }\n\n    setLoader(true);\n    axios.post(\"https://time-calculator-node.herokuapp.com/csv\", {\n      csvData\n    }).then(res => {\n      var _res$data;\n\n      setLoader(false);\n      if (!((_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.result)) toastr.error(\"Something went wrong! Try again\");else {\n        toastr.success('Your time is caluculated');\n        setData(res.data.result);\n      }\n    }).catch(err => {\n      setLoader(false);\n      toastr.error(err.response.data.error);\n    });\n  };\n\n  useEffect(() => {\n    const unloadCallback = event => {\n      event.preventDefault();\n      event.returnValue = \"\";\n      return \"\";\n    };\n\n    window.addEventListener(\"beforeunload\", unloadCallback);\n    return () => window.removeEventListener(\"beforeunload\", unloadCallback);\n  }, []);\n\n  function timestrToSec(timestr) {\n    var parts = timestr.split(\":\");\n    return parts[0] * 3600 + parts[1] * 60 + +parts[2];\n  }\n\n  function pad(num) {\n    if (num < 10) {\n      return \"0\" + num;\n    } else {\n      return \"\" + num;\n    }\n  }\n\n  function formatTime(seconds) {\n    return [pad(Math.floor(seconds / 3600)), pad(Math.floor(seconds / 60) % 60), pad(seconds % 60)].join(\":\");\n  }\n\n  function strToMins(t) {\n    var s = t.split(\":\");\n    return Number(s[0]) * 60 + Number(s[1]);\n  }\n\n  function minsToStr(t) {\n    return Math.trunc(t / 60) + ':' + ('00' + t % 60).slice(-2);\n  }\n\n  const checkEstimation = type => {\n    if (!time) {\n      toastr.error(\"input can to be blank!\");\n      return;\n    }\n\n    if (time !== \"00:00\") {\n      var cTime = moment().format(\"HH:mm\");\n\n      if (type && cTime + \":00\" > time + \":00\") {\n        toastr.error(\"Time is invalid\");\n        return;\n      } else {\n        let csvData = document.getElementById(\"fname\").value;\n        setLoader(true);\n        axios.post(\"https://time-calculator-node.herokuapp.com/csv\", {\n          csvData\n        }).then(res => {\n          var _res$data2;\n\n          if (!((_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : _res$data2.result)) {\n            setLoader(false);\n            toastr.error(\"Something went wrong! Try again\");\n          } else {\n            setData(res.data.result);\n            setTimeout(() => {\n              var result;\n              if (type) result = minsToStr(strToMins(time) - strToMins(cTime));else result = time;\n              let totaltime = formatTime(timestrToSec(cTime + \":00\") + timestrToSec(data.remainingWorkingTime + \":00\"));\n              totaltime = formatTime(timestrToSec(totaltime) + timestrToSec(result + \":00\"));\n              var timeString = totaltime;\n              var H = +timeString.substr(0, 2);\n              var h = H % 12 || 12;\n              var ampm = H < 12 || H === 24 ? \" AM\" : \" PM\";\n              timeString = h + timeString.substr(2, 3) + ampm;\n              setestimatedTime(timeString);\n\n              let _backTime;\n\n              if (type) _backTime = time;else _backTime = formatTime(timestrToSec(cTime + \":00\") + timestrToSec(time + \":00\"));\n              var _timeString = _backTime;\n\n              var _H = +_timeString.substr(0, 2);\n\n              var _h = _H % 12 || 12;\n\n              var _ampm = _H < 12 || _H === 24 ? \" AM\" : \" PM\";\n\n              _timeString = _h + _timeString.substr(2, 3) + _ampm;\n              setbackTime(_timeString);\n              toastr.success('Your time is caluculated');\n              setLoader(false);\n            }, 1000);\n          }\n        }).catch(err => {\n          setLoader(false);\n          toastr.error(err.response.data.error);\n        });\n      }\n    } else {\n      toastr.error(\"Time is invalid\");\n      return;\n    }\n  };\n\n  const customStyles = {\n    content: {\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      marginRight: '-50%',\n      transform: 'translate(-50%, -50%)',\n      backgroundColor: \"white\",\n      width: \"50%\"\n    }\n  };\n  useEffect(() => {\n    let date = moment(new Date(), 'MM-DD-YY').format('MM-DD-YY');\n    let tasks = localStorage.getItem(\"tasks\");\n\n    if (!tasks) {\n      let obj = {\n        date: date,\n        task: [],\n        completed: []\n      };\n      localStorage.setItem('tasks', JSON.stringify(obj));\n      setTodo(obj);\n    } else {\n      let _data = JSON.parse(tasks);\n\n      if ((_data === null || _data === void 0 ? void 0 : _data.date) !== date) {\n        let obj = {\n          date: date,\n          task: [],\n          completed: []\n        };\n        localStorage.setItem('tasks', JSON.stringify(obj));\n        setTodo(obj);\n      } else {\n        calculateImp(_data);\n      }\n    }\n  }, []);\n\n  const calculateImp = taksss => {\n    let _todo = taksss.task;\n    let tempArr = [];\n\n    let doitNow = _todo.filter(item => (item === null || item === void 0 ? void 0 : item.important) === true && (item === null || item === void 0 ? void 0 : item.argent) === true);\n\n    if (doitNow.length > 0) {\n      doitNow.map(im => tempArr.push({ ...im,\n        priorityLevel: 10\n      }));\n    }\n\n    let delegate = _todo.filter(item => (item === null || item === void 0 ? void 0 : item.important) === false && (item === null || item === void 0 ? void 0 : item.argent) === true);\n\n    if (delegate.length > 0) {\n      delegate.map(im => tempArr.push({ ...im,\n        priorityLevel: 6\n      }));\n    }\n\n    let schdule = _todo.filter(item => (item === null || item === void 0 ? void 0 : item.important) === true && (item === null || item === void 0 ? void 0 : item.argent) === false);\n\n    if (schdule.length > 0) {\n      schdule.map(im => tempArr.push({ ...im,\n        priorityLevel: 4\n      }));\n    }\n\n    let drop = _todo.filter(item => (item === null || item === void 0 ? void 0 : item.important) === false && (item === null || item === void 0 ? void 0 : item.argent) === false);\n\n    if (drop.length > 0) {\n      drop.map(im => tempArr.push({ ...im,\n        priorityLevel: 2\n      }));\n    }\n\n    localStorage.setItem('tasks', JSON.stringify({\n      date: taksss.date,\n      task: tempArr,\n      completed: taksss.completed\n    }));\n    setTodo({\n      date: taksss.date,\n      task: tempArr,\n      completed: taksss.completed\n    });\n  };\n\n  const copyToClipboard = () => {\n    var range = document.createRange();\n    range.selectNode(document.getElementById(\"taskUpdate\"));\n    window.getSelection().removeAllRanges(); // clear current selection\n\n    window.getSelection().addRange(range); // to select text\n\n    document.execCommand(\"copy\");\n    window.getSelection().removeAllRanges(); // to deselect\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: salert,\n      contentLabel: \"Example Modal\",\n      style: customStyles,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"close modal\",\n        style: {\n          height: 30,\n          width: 30,\n          float: \"right\",\n          cursor: \"pointer\"\n        },\n        onClick: () => setalert(false),\n        src: require('./assets/close.png').default\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Ar you sure want to delete ?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Delete\",\n          onClick: () => {\n            let __taks = todo.task;\n\n            __taks.splice(deleteId, 1);\n\n            setTodo({\n              date: todo.date,\n              task: __taks,\n              completed: todo.completed\n            });\n            localStorage.setItem(\"tasks\", JSON.stringify({\n              date: todo.date,\n              task: __taks,\n              completed: todo.completed\n            })); // calculateImp({\n            //   date: todo.date,\n            //   task: __taks,\n            //   completed: todo.completed\n            // });\n\n            setalert(false);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modal,\n      contentLabel: \"Example Modal\",\n      style: customStyles,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"close modal\",\n        style: {\n          height: 30,\n          width: 30,\n          float: \"right\",\n          cursor: \"pointer\"\n        },\n        onClick: () => setModal(false),\n        src: require('./assets/close.png').default\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"add your task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          let title = e.target.title.value,\n              description = e.target.taskDesc.value,\n              important = e.target.important.value === \"yes\",\n              argent = e.target.argent.value === \"yes\";\n          calculateImp({\n            date: todo.date,\n            task: [...todo.task, {\n              title,\n              description,\n              important,\n              argent\n            }],\n            completed: todo.completed\n          });\n          setModal(false);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"title\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"title\",\n          name: \"title\",\n          placeholder: \"your task title..\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"taskDesc\",\n          children: \"Task description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"taskDesc\",\n          name: \"taskDesc\",\n          placeholder: \"you task description..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"important\",\n          children: \"Is this task important ?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"important\",\n          name: \"important\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"yes\",\n            children: \"Yes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"no\",\n            children: \"No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"argent\",\n          children: \"Is this task urgent ?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"argent\",\n          name: \"argent\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"yes\",\n            children: \"Yes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"no\",\n            children: \"No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }, this), loader && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader\",\n      children: /*#__PURE__*/_jsxDEV(Loader, {\n        type: \"Puff\",\n        color: \"#276DC6\",\n        height: 130,\n        width: 130\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: tab === 'timeSheet' ? 'activeTab' : 'inActiveTab',\n        onClick: () => {\n          setTab(\"timeSheet\");\n          localStorage.setItem(\"activeTab\", \"timeSheet\");\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Timesheet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: tab === 'task' ? 'activeTab' : 'inActiveTab',\n        onClick: () => {\n          setTab(\"task\");\n          localStorage.setItem(\"activeTab\", \"task\");\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 7\n    }, this), 2 > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"count\",\n      children: [\"Active user : \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 56\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 17\n    }, this), tab === 'timeSheet' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mainSec\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Enter your attendance list\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"fname\",\n          name: \"firstname\",\n          placeholder: \"Paste your attendance list here....\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          onClick: calculateData,\n          value: \"Calculate Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 13\n      }, this), data && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Office time Status :\", /*#__PURE__*/_jsxDEV(\"b\", {\n            style: {\n              color: data.isOfficeTimeCompleted ? \"green\" : \"red\",\n              fontSize: 20\n            },\n            children: data.isOfficeTimeCompleted ? \" Completed\" : \" In Progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Working time Status :\", /*#__PURE__*/_jsxDEV(\"b\", {\n            style: {\n              color: data.isWorkingTimeCompleted ? \"green\" : \"red\",\n              fontSize: 20\n            },\n            children: data.isWorkingTimeCompleted ? \" Completed\" : \" In Progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"column\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card\",\n              style: {\n                minHeight: data.isWorkingTimeCompleted ? 280 : 420\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\"Completed working time :\", /*#__PURE__*/_jsxDEV(\"b\", {\n                  style: {\n                    color: \"#276DC6\",\n                    fontSize: 25\n                  },\n                  children: [\" \", data.completedWorkingTime]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 437,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 436,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\"Remaining working time : \", /*#__PURE__*/_jsxDEV(\"b\", {\n                  style: {\n                    color: \"#00AED1\"\n                  },\n                  children: [\" \", data.remainingWorkingTime]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 438,\n                  columnNumber: 52\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 23\n              }, this), (data === null || data === void 0 ? void 0 : data.yourTimeWillbeCompleted) && /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\"Your time will be completed at : \", /*#__PURE__*/_jsxDEV(\"b\", {\n                  style: {\n                    color: \"#FFFFFF\",\n                    fontSize: 20,\n                    backgroundColor: \"#5EBA7D\",\n                    borderRadius: 10,\n                    padding: 8\n                  },\n                  children: data.yourTimeWillbeCompleted\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 441,\n                  columnNumber: 62\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\"Completed office time : \", /*#__PURE__*/_jsxDEV(\"b\", {\n                  style: {\n                    color: \"#276DC6\",\n                    fontSize: 25\n                  },\n                  children: data.comletedOfficeTime\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 443,\n                  columnNumber: 51\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 443,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\"Remaining office time : \", /*#__PURE__*/_jsxDEV(\"b\", {\n                  style: {\n                    color: \"#00AED1\"\n                  },\n                  children: data.remainingOfficeTime\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 444,\n                  columnNumber: 51\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 444,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"column2\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card\",\n              style: {\n                minHeight: data.isWorkingTimeCompleted ? 280 : 420\n              },\n              children: [(data === null || data === void 0 ? void 0 : data.totalBreaktime) && /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\"Total break time : \", /*#__PURE__*/_jsxDEV(\"b\", {\n                  style: {\n                    color: \"#8250DF\",\n                    fontSize: 22\n                  },\n                  children: data.totalBreaktime\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 452,\n                  columnNumber: 48\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 452,\n                columnNumber: 25\n              }, this), (data === null || data === void 0 ? void 0 : data.remainingBreakTime) && /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\"Remaining break time : \", /*#__PURE__*/_jsxDEV(\"b\", {\n                  style: {\n                    color: \"#8250DF\",\n                    fontSize: 20\n                  },\n                  children: data.remainingBreakTime\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 456,\n                  columnNumber: 52\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 456,\n                columnNumber: 25\n              }, this), (data === null || data === void 0 ? void 0 : data.completionTimeIfTakeBreak) && /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\"Your time will be completed with remaining break at : \", /*#__PURE__*/_jsxDEV(\"b\", {\n                  style: {\n                    color: \"#8250DF\",\n                    fontSize: 22\n                  },\n                  children: data.completionTimeIfTakeBreak\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 460,\n                  columnNumber: 83\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 460,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 462,\n                columnNumber: 23\n              }, this), !data.isWorkingTimeCompleted && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"timeContainer\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: \"Break time Pre-calculation\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 467,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(TimePicker, {\n                    onChange: settime,\n                    format: \"HH:mm\",\n                    value: time,\n                    disableClock: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 468,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      style: {\n                        marginRight: 10\n                      },\n                      className: \"btn\",\n                      onClick: () => checkEstimation(true),\n                      children: \"Clock time based\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 476,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      style: {\n                        marginLeft: 10\n                      },\n                      className: \"btn\",\n                      onClick: () => checkEstimation(false),\n                      children: \"Hourly based\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 477,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 475,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 466,\n                  columnNumber: 27\n                }, this), estimatedTime && /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: [\"Your working time will be completed at : \", /*#__PURE__*/_jsxDEV(\"b\", {\n                    style: {\n                      color: \"#D76100\",\n                      fontSize: 22\n                    },\n                    children: estimatedTime\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 482,\n                    columnNumber: 74\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 482,\n                  columnNumber: 29\n                }, this), backTime && /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: [\"Your expected In-time will be : \", /*#__PURE__*/_jsxDEV(\"b\", {\n                    style: {\n                      color: \"#D76100\",\n                      fontSize: 22\n                    },\n                    children: backTime\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 486,\n                    columnNumber: 65\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 486,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mainSec\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"manageTask\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Manage your task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"addTodoButton\",\n            onClick: () => {\n              setModal(true);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              alt: \"add todo\",\n              style: {\n                height: 30,\n                width: 30\n              },\n              src: require('./assets/add.png').default\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 510,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \" add task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"column2\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"pending\",\n                  children: \"Pending task list\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 525,\n                  columnNumber: 23\n                }, this), todo.task.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"taskBody\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: index + 1 + \". \" + item.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 531,\n                      columnNumber: 31\n                    }, this), (item === null || item === void 0 ? void 0 : item.description) !== '' && (item === null || item === void 0 ? void 0 : item.description) !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"- \", item.description]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 534,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 530,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"rightBody\",\n                    children: [(item === null || item === void 0 ? void 0 : item.priorityLevel) !== undefined && /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        style: {\n                          color: item.priorityLevel < 4 ? \"green\" : item.priorityLevel <= 6 ? 'orange' : \"red\",\n                          fontSize: 13\n                        },\n                        children: \"priority level\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 544,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        style: {\n                          color: \"white\",\n                          fontSize: 11,\n                          borderRadius: 11,\n                          background: \"green\",\n                          width: 21,\n                          height: 21,\n                          justifyContent: \"center\",\n                          alignItems: \"center\",\n                          textAlign: \"center\"\n                        },\n                        children: item.priorityLevel\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 552,\n                        columnNumber: 35\n                      }, this)]\n                    }, void 0, true), /*#__PURE__*/_jsxDEV(\"img\", {\n                      alt: \"delete todo\",\n                      src: require('./assets/delete.png').default,\n                      style: {\n                        height: 15,\n                        width: 15,\n                        marginRight: 10,\n                        cursor: \"pointer\"\n                      },\n                      onClick: () => {\n                        setalert(true);\n                        setDeleteId(index);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 566,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      className: \"checkBox\",\n                      type: \"checkbox\",\n                      id: \"comleted\",\n                      name: \"comleted\",\n                      onChange: () => {\n                        let _tempComp = todo.completed;\n\n                        _tempComp.push({ ...item\n                        });\n\n                        let _tempTask = todo.task;\n\n                        _tempTask.splice(index, 1);\n\n                        setTodo({\n                          date: todo.date,\n                          task: _tempTask,\n                          completed: _tempComp\n                        });\n                        localStorage.setItem(\"tasks\", JSON.stringify({\n                          date: todo.date,\n                          task: _tempTask,\n                          completed: _tempComp\n                        }));\n                      },\n                      checked: false\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 581,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 538,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 529,\n                  columnNumber: 27\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 524,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"column\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"done\",\n                  children: \"Completed task list\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 612,\n                  columnNumber: 23\n                }, this), todo.completed.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"taskBody\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: index + 1 + \". \" + item.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 617,\n                      columnNumber: 31\n                    }, this), (item === null || item === void 0 ? void 0 : item.description) !== '' && (item === null || item === void 0 ? void 0 : item.description) !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"- \", item.description]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 620,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 616,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"rightBody\",\n                    children: [(item === null || item === void 0 ? void 0 : item.priorityLevel) !== undefined && /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        style: {\n                          color: item.priorityLevel < 4 ? \"green\" : item.priorityLevel <= 6 ? 'orange' : \"red\",\n                          fontSize: 13\n                        },\n                        children: \"priority level\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 630,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        style: {\n                          color: \"white\",\n                          fontSize: 11,\n                          borderRadius: 11,\n                          background: \"green\",\n                          width: 21,\n                          height: 21,\n                          justifyContent: \"center\",\n                          alignItems: \"center\",\n                          textAlign: \"center\"\n                        },\n                        children: item.priorityLevel\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 638,\n                        columnNumber: 35\n                      }, this)]\n                    }, void 0, true), /*#__PURE__*/_jsxDEV(\"input\", {\n                      className: \"checkBox\",\n                      type: \"checkbox\",\n                      id: \"comleted\",\n                      name: \"comleted\",\n                      onChange: () => {\n                        let _tempComp = todo.completed;\n\n                        _tempComp.splice(index, 1);\n\n                        let _tempTask = todo.task;\n\n                        _tempTask.push({ ...item\n                        });\n\n                        calculateImp({\n                          date: todo.date,\n                          task: _tempTask,\n                          completed: _tempComp\n                        });\n                      },\n                      checked: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 652,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 624,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 615,\n                  columnNumber: 27\n                }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"taskUpdate\",\n                  id: \"taskUpdate\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    children: \"Task update\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 677,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                      children: \"1.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 678,\n                      columnNumber: 28\n                    }, this), \" I have worked on this task. (Done)\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 678,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                      children: \"2.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 679,\n                      columnNumber: 28\n                    }, this), \" I am working on this task. (In Progress)\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 679,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 676,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"addTodoButton\",\n                  onClick: () => {\n                    toastr.success(\"task update is copied\");\n                    copyToClipboard();\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Copy task update\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 688,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 681,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 611,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 610,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 13\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 281,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"7UgV9gxY5kCcxxAKwQBCiakyBFA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/macos18/Documents/IPS_Projects/RND/Timsheet_calcy/timecalculator_react/src/App.js"],"names":["React","useState","useEffect","axios","toastr","Loader","moment","TimePicker","io","Modal","ENDPOINT","socket","App","count","setCount","modal","setModal","tab","setTab","localStorage","getItem","todo","setTodo","date","task","completed","emit","on","data","setData","salert","setalert","deleteId","setDeleteId","loader","setLoader","time","settime","backTime","setbackTime","estimatedTime","setestimatedTime","calculateData","csvData","document","getElementById","value","error","post","then","res","result","success","catch","err","response","unloadCallback","event","preventDefault","returnValue","window","addEventListener","removeEventListener","timestrToSec","timestr","parts","split","pad","num","formatTime","seconds","Math","floor","join","strToMins","t","s","Number","minsToStr","trunc","slice","checkEstimation","type","cTime","format","setTimeout","totaltime","remainingWorkingTime","timeString","H","substr","h","ampm","_backTime","_timeString","_H","_h","_ampm","customStyles","content","top","left","right","bottom","marginRight","transform","backgroundColor","width","Date","tasks","obj","setItem","JSON","stringify","_data","parse","calculateImp","taksss","_todo","tempArr","doitNow","filter","item","important","argent","length","map","im","push","priorityLevel","delegate","schdule","drop","copyToClipboard","range","createRange","selectNode","getSelection","removeAllRanges","addRange","execCommand","height","float","cursor","require","default","__taks","splice","e","title","target","description","taskDesc","color","isOfficeTimeCompleted","fontSize","isWorkingTimeCompleted","minHeight","completedWorkingTime","yourTimeWillbeCompleted","borderRadius","padding","comletedOfficeTime","remainingOfficeTime","totalBreaktime","remainingBreakTime","completionTimeIfTakeBreak","marginLeft","index","undefined","background","justifyContent","alignItems","textAlign","_tempComp","_tempTask"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport './Style.css'\nimport axios from 'axios';\nimport toastr from 'toastr';\nimport \"./toastr.min.css\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from \"react-loader-spinner\";\nimport moment from 'moment';\nimport TimePicker from 'react-time-picker';\nimport io from \"socket.io-client\";\nimport Modal from 'react-modal';\nconst ENDPOINT = 'https://time-calculator-node.herokuapp.com/';\n\nlet socket;\n\nfunction App() {\n  const [count, setCount] = useState(0);\n  const [modal, setModal] = useState(false);\n  const [tab, setTab] = useState(localStorage.getItem(\"activeTab\") ? localStorage.getItem(\"activeTab\") : 'timeSheet');\n  const [todo, setTodo] = useState({\n    date: null,\n    task: [],\n    completed: []\n  });\n\n  useEffect(() => {\n    socket = io(ENDPOINT);\n    socket.emit('join', \"\",\n      () => { });\n  }, []);\n\n  useEffect(() => {\n    socket.on('countUpdate', data => {\n      setCount(data);\n    });\n  }, []);\n\n  const [data, setData] = useState(null);\n  const [salert, setalert] = useState(false);\n  const [deleteId, setDeleteId] = useState(null);\n\n  const [loader, setLoader] = useState(false);\n  const [time, settime] = useState(\"00:00\");\n  const [backTime, setbackTime] = useState(null);\n  const [estimatedTime, setestimatedTime] = useState(null);\n  const calculateData = () => {\n    let csvData = document.getElementById(\"fname\").value;\n    if (!csvData) {\n      toastr.error(\"input can to be blank!\");\n      return;\n    }\n\n    setLoader(true);\n    axios.post(\"https://time-calculator-node.herokuapp.com/csv\", { csvData }).then(res => {\n      setLoader(false);\n      if (!res.data?.result)\n        toastr.error(\"Something went wrong! Try again\")\n      else {\n        toastr.success('Your time is caluculated')\n        setData(res.data.result);\n      }\n    }).catch(err => {\n      setLoader(false);\n      toastr.error(err.response.data.error)\n    })\n  }\n\n  useEffect(() => {\n    const unloadCallback = (event) => {\n      event.preventDefault();\n      event.returnValue = \"\";\n      return \"\";\n    };\n\n    window.addEventListener(\"beforeunload\", unloadCallback);\n    return () => window.removeEventListener(\"beforeunload\", unloadCallback);\n  }, []);\n\n  function timestrToSec(timestr) {\n    var parts = timestr.split(\":\");\n    return (parts[0] * 3600) +\n      (parts[1] * 60) +\n      (+parts[2]);\n  }\n\n  function pad(num) {\n    if (num < 10) {\n      return \"0\" + num;\n    } else {\n      return \"\" + num;\n    }\n  }\n\n  function formatTime(seconds) {\n    return [pad(Math.floor(seconds / 3600)),\n    pad(Math.floor(seconds / 60) % 60),\n    pad(seconds % 60),\n    ].join(\":\");\n  }\n\n  function strToMins(t) {\n    var s = t.split(\":\");\n    return Number(s[0]) * 60 + Number(s[1]);\n  }\n\n  function minsToStr(t) {\n    return Math.trunc(t / 60) + ':' + ('00' + t % 60).slice(-2);\n  }\n\n\n  const checkEstimation = (type) => {\n    if (!time) {\n      toastr.error(\"input can to be blank!\");\n      return;\n    }\n    if (time !== \"00:00\") {\n      var cTime = moment().format(\"HH:mm\")\n      if (type && (cTime + \":00\" > time + \":00\")) {\n        toastr.error(\"Time is invalid\")\n        return;\n      }\n      else {\n        let csvData = document.getElementById(\"fname\").value;\n        setLoader(true);\n        axios.post(\"https://time-calculator-node.herokuapp.com/csv\", { csvData }).then(res => {\n          if (!res.data?.result) {\n            setLoader(false);\n            toastr.error(\"Something went wrong! Try again\")\n          }\n          else {\n            setData(res.data.result);\n            setTimeout(() => {\n              var result;\n              if (type)\n                result = minsToStr(strToMins(time) - strToMins(cTime));\n              else\n                result = time;\n              let totaltime = formatTime(timestrToSec(cTime + \":00\") + timestrToSec(data.remainingWorkingTime + \":00\"));\n              totaltime = formatTime(timestrToSec(totaltime) + timestrToSec(result + \":00\"));\n              var timeString = totaltime;\n              var H = +timeString.substr(0, 2);\n              var h = H % 12 || 12;\n              var ampm = (H < 12 || H === 24) ? \" AM\" : \" PM\";\n              timeString = h + timeString.substr(2, 3) + ampm;\n              setestimatedTime(timeString);\n              let _backTime;\n              if (type)\n                _backTime = time;\n              else\n                _backTime = formatTime(timestrToSec(cTime + \":00\") + timestrToSec(time + \":00\"));\n\n              var _timeString = _backTime;\n              var _H = +_timeString.substr(0, 2);\n              var _h = _H % 12 || 12;\n              var _ampm = (_H < 12 || _H === 24) ? \" AM\" : \" PM\";\n              _timeString = _h + _timeString.substr(2, 3) + _ampm;\n              setbackTime(_timeString);\n\n              toastr.success('Your time is caluculated');\n              setLoader(false);\n            }, 1000);\n          }\n        }).catch(err => {\n          setLoader(false);\n          toastr.error(err.response.data.error)\n        })\n      }\n    }\n    else {\n      toastr.error(\"Time is invalid\")\n      return;\n    }\n  }\n\n  const customStyles = {\n    content: {\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      marginRight: '-50%',\n      transform: 'translate(-50%, -50%)',\n      backgroundColor: \"white\",\n      width: \"50%\"\n    },\n  };\n\n  useEffect(() => {\n    let date = moment(new Date(), 'MM-DD-YY').format('MM-DD-YY');\n    let tasks = localStorage.getItem(\"tasks\");\n    if (!tasks) {\n      let obj = {\n        date: date,\n        task: [],\n        completed: []\n      }\n      localStorage.setItem('tasks', JSON.stringify(obj));\n      setTodo(obj);\n    }\n    else {\n      let _data = JSON.parse(tasks);\n      if (_data?.date !== date) {\n        let obj = {\n          date: date,\n          task: [],\n          completed: []\n        }\n        localStorage.setItem('tasks', JSON.stringify(obj));\n        setTodo(obj);\n      }\n      else {\n        calculateImp(_data)\n      }\n    }\n  }, [])\n\n  const calculateImp = (taksss) => {\n    let _todo = taksss.task;\n    let tempArr = [];\n    let doitNow = _todo.filter(item => item?.important === true && item?.argent === true);\n    if (doitNow.length > 0) {\n      doitNow.map(im =>\n        tempArr.push({\n          ...im,\n          priorityLevel: 10\n        })\n      )\n    }\n\n    let delegate = _todo.filter(item => item?.important === false && item?.argent === true);\n    if (delegate.length > 0) {\n      delegate.map(im =>\n        tempArr.push({\n          ...im,\n          priorityLevel: 6\n        })\n      )\n    }\n\n    let schdule = _todo.filter(item => item?.important === true && item?.argent === false);\n    if (schdule.length > 0) {\n      schdule.map(im =>\n        tempArr.push({\n          ...im,\n          priorityLevel: 4\n        })\n      )\n    }\n\n    let drop = _todo.filter(item => item?.important === false && item?.argent === false);\n    if (drop.length > 0) {\n      drop.map(im =>\n        tempArr.push({\n          ...im,\n          priorityLevel: 2\n        })\n      )\n    }\n    localStorage.setItem('tasks', JSON.stringify({\n      date: taksss.date,\n      task: tempArr,\n      completed: taksss.completed\n    }));\n    setTodo({\n      date: taksss.date,\n      task: tempArr,\n      completed: taksss.completed\n    });\n  }\n\n  const copyToClipboard = () => {\n    var range = document.createRange();\n    range.selectNode(document.getElementById(\"taskUpdate\"));\n    window.getSelection().removeAllRanges(); // clear current selection\n    window.getSelection().addRange(range); // to select text\n    document.execCommand(\"copy\");\n    window.getSelection().removeAllRanges();// to deselect\n  }\n\n  return (\n    <div id=\"container\">\n      <Modal\n        isOpen={salert}\n        contentLabel=\"Example Modal\"\n        style={customStyles}\n      >\n        <img\n          alt='close modal'\n          style={{\n            height: 30, width: 30,\n            float: \"right\",\n            cursor: \"pointer\"\n          }}\n          onClick={() => setalert(false)}\n          src={require('./assets/close.png').default}\n        />\n        <div>\n          <h2>\n            Ar you sure want to delete ?\n          </h2>\n          <input type=\"submit\" value=\"Delete\" onClick={() => {\n            let __taks = todo.task;\n            __taks.splice(deleteId, 1);\n            setTodo({\n              date: todo.date,\n              task: __taks,\n              completed: todo.completed\n            })\n            localStorage.setItem(\"tasks\", JSON.stringify({\n              date: todo.date,\n              task: __taks,\n              completed: todo.completed\n            }))\n            // calculateImp({\n            //   date: todo.date,\n            //   task: __taks,\n            //   completed: todo.completed\n            // });\n            setalert(false);\n          }} />\n        </div>\n      </Modal>\n\n      <Modal\n        isOpen={modal}\n        contentLabel=\"Example Modal\"\n        style={customStyles}\n      >\n        <img\n          alt='close modal'\n          style={{\n            height: 30, width: 30,\n            float: \"right\",\n            cursor: \"pointer\"\n          }}\n          onClick={() => setModal(false)}\n          src={require('./assets/close.png').default}\n        />\n        <h2>add your task</h2>\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            let title = e.target.title.value,\n              description = e.target.taskDesc.value,\n              important = e.target.important.value === \"yes\",\n              argent = e.target.argent.value === \"yes\";\n            calculateImp({\n              date: todo.date,\n              task: [\n                ...todo.task,\n                {\n                  title, description, important, argent\n                }\n              ],\n              completed: todo.completed\n            });\n            setModal(false)\n          }}\n        >\n          <label for=\"title\">Title</label>\n          <input type=\"text\" id=\"title\" name=\"title\" placeholder=\"your task title..\" required />\n          <p />\n          <label for=\"taskDesc\">Task description</label>\n          <input type=\"text\" id=\"taskDesc\" name=\"taskDesc\" placeholder=\"you task description..\" />\n          <p />\n          <label for=\"important\">Is this task important ?</label>\n          <select id=\"important\" name=\"important\">\n            <option value=\"yes\">Yes</option>\n            <option value=\"no\">No</option>\n          </select>\n          <p />\n          <label for=\"argent\">Is this task urgent ?</label>\n          <select id=\"argent\" name=\"argent\">\n            <option value=\"yes\">Yes</option>\n            <option value=\"no\">No</option>\n          </select>\n\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n      </Modal>\n\n\n      {\n        loader && <div className=\"loader\">\n          <Loader\n            type=\"Puff\"\n            color=\"#276DC6\"\n            height={130}\n            width={130}\n          />\n        </div>\n      }\n\n      <section\n        className='tabs'\n      >\n        <div\n          className={tab === 'timeSheet' ? 'activeTab' : 'inActiveTab'}\n          onClick={() => { setTab(\"timeSheet\"); localStorage.setItem(\"activeTab\", \"timeSheet\") }}\n        >\n          <span>Timesheet</span>\n        </div>\n        <div\n          className={tab === 'task' ? 'activeTab' : 'inActiveTab'}\n          onClick={() => { setTab(\"task\"); localStorage.setItem(\"activeTab\", \"task\") }}\n        >\n          <span>Task</span>\n        </div>\n      </section>\n      {2 > 0 && <span className=\"count\" >Active user : <b>{count}</b></span>}\n\n      {\n        tab === 'timeSheet' ?\n          <>\n            <div\n              className='mainSec'\n            >\n              <h2>Enter your attendance list</h2>\n              <textarea id=\"fname\" name=\"firstname\" placeholder=\"Paste your attendance list here....\" />\n              <input type=\"submit\" onClick={calculateData} value=\"Calculate Time\" />\n            </div>\n\n            {\n              data &&\n              <div>\n                <h3>Office time Status :\n                  <b style={{ color: data.isOfficeTimeCompleted ? \"green\" : \"red\", fontSize: 20 }}>{data.isOfficeTimeCompleted ? \" Completed\" : \" In Progress\"}\n                  </b>\n                </h3>\n                <h3>Working time Status :\n                  <b style={{ color: data.isWorkingTimeCompleted ? \"green\" : \"red\", fontSize: 20 }}>{data.isWorkingTimeCompleted ? \" Completed\" : \" In Progress\"}\n                  </b></h3>\n                <div class=\"row\">\n                  <div class=\"column\">\n                    <div className=\"card\" style={{ minHeight: data.isWorkingTimeCompleted ? 280 : 420 }}>\n                      <h3>Completed working time :\n                        <b style={{ color: \"#276DC6\", fontSize: 25 }}> {data.completedWorkingTime}</b></h3>\n                      <h3>Remaining working time : <b style={{ color: \"#00AED1\" }}> {data.remainingWorkingTime}</b></h3>\n                      {\n                        data?.yourTimeWillbeCompleted &&\n                        <h3>Your time will be completed at : <b style={{ color: \"#FFFFFF\", fontSize: 20, backgroundColor: \"#5EBA7D\", borderRadius: 10, padding: 8 }}>{data.yourTimeWillbeCompleted}</b></h3>\n                      }\n                      <h3>Completed office time : <b style={{ color: \"#276DC6\", fontSize: 25 }}>{data.comletedOfficeTime}</b></h3>\n                      <h3>Remaining office time : <b style={{ color: \"#00AED1\" }}>{data.remainingOfficeTime}</b></h3>\n                    </div>\n                  </div>\n\n                  <div class=\"column2\">\n                    <div className=\"card\" style={{ minHeight: data.isWorkingTimeCompleted ? 280 : 420 }}>\n                      {\n                        data?.totalBreaktime &&\n                        <h3>Total break time : <b style={{ color: \"#8250DF\", fontSize: 22 }}>{data.totalBreaktime}</b></h3>\n                      }\n                      {\n                        data?.remainingBreakTime &&\n                        <h3>Remaining break time : <b style={{ color: \"#8250DF\", fontSize: 20 }}>{data.remainingBreakTime}</b></h3>\n                      }\n                      {\n                        data?.completionTimeIfTakeBreak &&\n                        <h3>Your time will be completed with remaining break at : <b style={{ color: \"#8250DF\", fontSize: 22 }}>{data.completionTimeIfTakeBreak}</b></h3>\n                      }\n                      <br />\n                      {\n                        !data.isWorkingTimeCompleted &&\n                        <>\n                          <div className=\"timeContainer\">\n                            <h3>Break time Pre-calculation</h3>\n                            <TimePicker\n                              onChange={settime}\n                              format=\"HH:mm\"\n                              value={time}\n                              disableClock\n                            />\n                            {/* <input id=\"appt-time\" onChange={e => timeChange(e)} type=\"time\" name=\"appt-time\"></input> */}\n                            <div>\n                              <button style={{ marginRight: 10 }} className=\"btn\" onClick={() => checkEstimation(true)}>Clock time based</button>\n                              <button style={{ marginLeft: 10 }} className=\"btn\" onClick={() => checkEstimation(false)}>Hourly based</button>\n                            </div>\n                          </div>\n                          {\n                            estimatedTime &&\n                            <h3>Your working time will be completed at : <b style={{ color: \"#D76100\", fontSize: 22 }}>{estimatedTime}</b></h3>\n                          }\n                          {\n                            backTime &&\n                            <h3>Your expected In-time will be : <b style={{ color: \"#D76100\", fontSize: 22 }}>{backTime}</b></h3>\n                          }\n                        </>\n                      }\n                    </div>\n                  </div>\n                </div>\n\n              </div>\n            }\n          </> : <>\n            <div\n              className='mainSec'\n            >\n              <span\n                className='manageTask'\n              >\n                <h2>Manage your task</h2>\n                <div\n                  className='addTodoButton'\n                  onClick={() => {\n                    setModal(true);\n                  }}\n                >\n                  <img\n                    alt='add todo'\n                    style={{\n                      height: 30, width: 30\n                    }}\n                    src={require('./assets/add.png').default}\n                  />\n                  <span> add task</span>\n                </div>\n              </span>\n\n              <section>\n                <div class=\"row\">\n                  <div class=\"column2\">\n                    <div className=\"card\" >\n                      <h3 className='pending' >Pending task list</h3>\n\n                      {\n                        todo.task.map((item, index) =>\n                          <div className='taskBody' >\n                            <div>\n                              <span>{index + 1 + \". \" + item.title}</span>\n                              {\n                                item?.description !== '' && item?.description !== null &&\n                                <p>- {item.description}</p>\n                              }\n\n                            </div>\n                            <div\n                              className='rightBody'\n                            >\n                              {\n                                item?.priorityLevel !== undefined &&\n                                <>\n                                  <span\n                                    style={{\n                                      color: item.priorityLevel < 4 ? \"green\" : item.priorityLevel <= 6 ? 'orange' : \"red\",\n                                      fontSize: 13\n                                    }}\n                                  >\n                                    priority level\n                                  </span>\n                                  <span style={{\n                                    color: \"white\",\n                                    fontSize: 11,\n                                    borderRadius: 11,\n                                    background: \"green\",\n                                    width: 21,\n                                    height: 21,\n                                    justifyContent: \"center\",\n                                    alignItems: \"center\",\n                                    textAlign: \"center\"\n                                  }}>{item.priorityLevel}</span>\n                                </>\n                              }\n\n                              <img\n                                alt='delete todo'\n                                src={require('./assets/delete.png').default}\n                                style={{\n                                  height: 15,\n                                  width: 15,\n                                  marginRight: 10,\n                                  cursor: \"pointer\"\n                                }}\n                                onClick={() => {\n                                  setalert(true);\n                                  setDeleteId(index)\n                                }}\n                              />\n\n                              <input className='checkBox' type=\"checkbox\" id=\"comleted\" name=\"comleted\"\n                                onChange={() => {\n                                  let _tempComp = todo.completed;\n                                  _tempComp.push({\n                                    ...item\n                                  });\n                                  let _tempTask = todo.task;\n                                  _tempTask.splice(index, 1);\n\n                                  setTodo({\n                                    date: todo.date,\n                                    task: _tempTask,\n                                    completed: _tempComp\n                                  })\n                                  localStorage.setItem(\"tasks\", JSON.stringify({\n                                    date: todo.date,\n                                    task: _tempTask,\n                                    completed: _tempComp\n                                  }))\n\n                                }}\n                                checked={false}\n                              />\n                            </div>\n                          </div>\n                        )\n                      }\n                    </div>\n                  </div>\n                  <div class=\"column\">\n                    <div className=\"card\" >\n                      <h3 className='done' >Completed task list</h3>\n                      {\n                        todo.completed.map((item, index) =>\n                          <div className='taskBody' >\n                            <div>\n                              <span>{index + 1 + \". \" + item.title}</span>\n                              {\n                                item?.description !== '' && item?.description !== null &&\n                                <p>- {item.description}</p>\n                              }\n\n                            </div>\n                            <div\n                              className='rightBody'\n                            >\n                              {\n                                item?.priorityLevel !== undefined &&\n                                <>\n                                  <span\n                                    style={{\n                                      color: item.priorityLevel < 4 ? \"green\" : item.priorityLevel <= 6 ? 'orange' : \"red\",\n                                      fontSize: 13\n                                    }}\n                                  >\n                                    priority level\n                                  </span>\n                                  <span style={{\n                                    color: \"white\",\n                                    fontSize: 11,\n                                    borderRadius: 11,\n                                    background: \"green\",\n                                    width: 21,\n                                    height: 21,\n                                    justifyContent: \"center\",\n                                    alignItems: \"center\",\n                                    textAlign: \"center\"\n                                  }}>{item.priorityLevel}</span>\n                                </>\n                              }\n\n                              <input className='checkBox' type=\"checkbox\" id=\"comleted\" name=\"comleted\"\n                                onChange={() => {\n                                  let _tempComp = todo.completed;\n                                  _tempComp.splice(index, 1);\n\n                                  let _tempTask = todo.task;\n                                  _tempTask.push({\n                                    ...item\n                                  });\n\n                                  calculateImp({\n                                    date: todo.date,\n                                    task: _tempTask,\n                                    completed: _tempComp\n                                  })\n\n                                }}\n                                checked={true}\n                              />\n                            </div>\n                          </div>\n                        )\n                      }\n\n                      <div className='taskUpdate' id='taskUpdate' >\n                        <h4>Task update</h4>\n                        <p><b>1.</b> I have worked on this task. (Done)</p>\n                        <p><b>2.</b> I am working on this task. (In Progress)</p>\n                      </div>\n                      <div\n                        className='addTodoButton'\n                        onClick={() => {\n                          toastr.success(\"task update is copied\");\n                          copyToClipboard()\n                        }}\n                      >\n                        <span>Copy task update</span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n              </section>\n            </div>\n          </>\n      }\n\n\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}